[{"/workspace/BreakFastChatBot/breakfast/src/App.js":"1","/workspace/BreakFastChatBot/breakfast/src/reportWebVitals.js":"2","/workspace/BreakFastChatBot/breakfast/src/index.js":"3","/workspace/BreakFastChatBot/breakfast/src/Header.js":"4","/workspace/BreakFastChatBot/breakfast/src/Icon.js":"5","/workspace/BreakFastChatBot/breakfast/src/Body.js":"6","/workspace/BreakFastChatBot/breakfast/src/Expandable.js":"7","/workspace/BreakFastChatBot/breakfast/src/useEffectAfterMount.js":"8","/workspace/BreakFastChatBot/breakfast/src/useExpanded.js":"9"},{"size":603,"mtime":1607528526338,"results":"10","hashOfConfig":"11"},{"size":362,"mtime":1607511985804,"results":"12","hashOfConfig":"11"},{"size":479,"mtime":1607512620201,"results":"13","hashOfConfig":"11"},{"size":453,"mtime":1607520894555,"results":"14","hashOfConfig":"11"},{"size":443,"mtime":1607521726579,"results":"15","hashOfConfig":"11"},{"size":464,"mtime":1607521717998,"results":"16","hashOfConfig":"11"},{"size":1001,"mtime":1607519352804,"results":"17","hashOfConfig":"11"},{"size":299,"mtime":1607528217264,"results":"18","hashOfConfig":"11"},{"size":326,"mtime":1607527895280,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"vt2v8w",{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/workspace/BreakFastChatBot/breakfast/src/App.js",[],"/workspace/BreakFastChatBot/breakfast/src/reportWebVitals.js",[],"/workspace/BreakFastChatBot/breakfast/src/index.js",[],"/workspace/BreakFastChatBot/breakfast/src/Header.js",[],"/workspace/BreakFastChatBot/breakfast/src/Icon.js",[],"/workspace/BreakFastChatBot/breakfast/src/Body.js",[],"/workspace/BreakFastChatBot/breakfast/src/Expandable.js",["39"],"import Header from './Header'\nimport Icon from './Icon'\nimport Body from './Body'\nimport React, { createContext, useState, useCallback, useRef, useEffect, useMemo } from 'react'\n\nexport const ExpandableContext = createContext()\nconst { Provider } = ExpandableContext\n\nconst Expandable = ({ children, onExpand }) => {\n  const [expanded, setExpanded] = useState(false)\n  const toggle = useCallback(\n    () => setExpanded(prevExpanded => !prevExpanded),\n    []\n  )\n  const componentJustMounted = useRef(true)\n  useEffect(\n    () => {\n      if (!componentJustMounted) {\n        onExpand(expanded)\n      }\n     componentJustMounted.current = false\n    },\n    [expanded]\n  )\n  const value = useMemo(\n   () => ({ expanded, toggle }), \n   [expanded, toggle]\n  )\n  return (\n    <Provider value={value}>\n        {children}\n    </Provider>\n  )\n}\n\n// Remember this is just a personal reference. It's not mandatory\nExpandable.Header = Header\nExpandable.Body = Body\nExpandable.Icon = Icon\n\nexport default Expandable","/workspace/BreakFastChatBot/breakfast/src/useEffectAfterMount.js",["40","41"],"/workspace/BreakFastChatBot/breakfast/src/useExpanded.js",[],{"ruleId":"42","severity":1,"message":"43","line":23,"column":5,"nodeType":"44","endLine":23,"endColumn":15,"suggestions":"45"},{"ruleId":"42","severity":1,"message":"46","line":10,"column":7,"nodeType":"47","endLine":10,"endColumn":11},{"ruleId":"42","severity":1,"message":"48","line":10,"column":7,"nodeType":"47","endLine":10,"endColumn":11,"suggestions":"49"},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'onExpand'. Either include it or remove the dependency array. If 'onExpand' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["50"],"React Hook useEffect was passed a dependency list that is not an array literal. This means we can't statically verify whether you've passed the correct dependencies.","Identifier","React Hook useEffect has a missing dependency: 'cb'. Either include it or remove the dependency array. If 'cb' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["51"],{"desc":"52","fix":"53"},{"desc":"54","fix":"55"},"Update the dependencies array to be: [expanded, onExpand]",{"range":"56","text":"57"},"Update the dependencies array to be: [cb]",{"range":"58","text":"59"},[654,664],"[expanded, onExpand]",[292,296],"[cb]"]